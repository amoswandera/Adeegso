// vite.config.js
import { defineConfig, loadEnv } from "file:///C:/Users/Hp/Adeegso/frontend/node_modules/vite/dist/node/index.js";
import react from "file:///C:/Users/Hp/Adeegso/frontend/node_modules/@vitejs/plugin-react/dist/index.js";
var vite_config_default = defineConfig(({ mode }) => {
  const env = loadEnv(mode, process.cwd(), "");
  console.log("Vite Environment Variables:", {
    VITE_API_URL: env.VITE_API_URL,
    VITE_WEBSOCKET_URL: env.VITE_WEBSOCKET_URL,
    VITE_BACKEND_URL: env.VITE_BACKEND_URL
  });
  return {
    plugins: [react()],
    server: {
      port: 5173,
      host: "127.0.0.1",
      cors: true,
      proxy: {
        // Proxy API requests to the backend
        "/api": {
          target: env.VITE_BACKEND_URL || "http://localhost:8000",
          changeOrigin: true,
          secure: false,
          rewrite: (path) => path.replace(/^\/api/, ""),
          configure: (proxy, _options) => {
            proxy.on("error", (err, req, res) => {
              console.error("Proxy Error:", err);
              if (!res.headersSent) {
                res.writeHead(500, { "Content-Type": "application/json" });
              }
              res.end(JSON.stringify({ error: "Proxy Error", details: err.message }));
            });
            proxy.on("proxyReq", (proxyReq, req, res) => {
              console.log(`[${(/* @__PURE__ */ new Date()).toISOString()}] ${req.method} ${req.url} -> ${proxyReq.path}`);
            });
            proxy.on("proxyRes", (proxyRes, req, res) => {
              console.log(`[${(/* @__PURE__ */ new Date()).toISOString()}] ${proxyRes.statusCode} ${req.method} ${req.url}`);
            });
          }
        },
        // Proxy WebSocket connections
        "/ws": {
          target: env.VITE_WEBSOCKET_URL || "ws://localhost:8000",
          ws: true,
          changeOrigin: true,
          secure: false,
          rewrite: (path) => path
        }
      }
    },
    define: {
      "process.env": env
    }
  };
});
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5jb25maWcuanMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImNvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9kaXJuYW1lID0gXCJDOlxcXFxVc2Vyc1xcXFxIcFxcXFxBZGVlZ3NvXFxcXGZyb250ZW5kXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ZpbGVuYW1lID0gXCJDOlxcXFxVc2Vyc1xcXFxIcFxcXFxBZGVlZ3NvXFxcXGZyb250ZW5kXFxcXHZpdGUuY29uZmlnLmpzXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ltcG9ydF9tZXRhX3VybCA9IFwiZmlsZTovLy9DOi9Vc2Vycy9IcC9BZGVlZ3NvL2Zyb250ZW5kL3ZpdGUuY29uZmlnLmpzXCI7aW1wb3J0IHsgZGVmaW5lQ29uZmlnLCBsb2FkRW52IH0gZnJvbSAndml0ZSc7XHJcbmltcG9ydCByZWFjdCBmcm9tICdAdml0ZWpzL3BsdWdpbi1yZWFjdCc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBkZWZpbmVDb25maWcoKHsgbW9kZSB9KSA9PiB7XHJcbiAgLy8gTG9hZCBlbnYgZmlsZSBiYXNlZCBvbiBgbW9kZWAgaW4gdGhlIGN1cnJlbnQgZGlyZWN0b3J5IGFuZCBhbGwgcGFyZW50IGRpcmVjdG9yaWVzXHJcbiAgY29uc3QgZW52ID0gbG9hZEVudihtb2RlLCBwcm9jZXNzLmN3ZCgpLCAnJyk7XHJcbiAgXHJcbiAgLy8gTG9nIGVudmlyb25tZW50IHZhcmlhYmxlcyBmb3IgZGVidWdnaW5nXHJcbiAgY29uc29sZS5sb2coJ1ZpdGUgRW52aXJvbm1lbnQgVmFyaWFibGVzOicsIHtcclxuICAgIFZJVEVfQVBJX1VSTDogZW52LlZJVEVfQVBJX1VSTCxcclxuICAgIFZJVEVfV0VCU09DS0VUX1VSTDogZW52LlZJVEVfV0VCU09DS0VUX1VSTCxcclxuICAgIFZJVEVfQkFDS0VORF9VUkw6IGVudi5WSVRFX0JBQ0tFTkRfVVJMXHJcbiAgfSk7XHJcblxyXG4gIHJldHVybiB7XHJcbiAgICBwbHVnaW5zOiBbcmVhY3QoKV0sXHJcbiAgICBzZXJ2ZXI6IHtcclxuICAgICAgcG9ydDogNTE3MyxcclxuICAgICAgaG9zdDogJzEyNy4wLjAuMScsXHJcbiAgICAgIGNvcnM6IHRydWUsXHJcbiAgICAgIHByb3h5OiB7XHJcbiAgICAgICAgLy8gUHJveHkgQVBJIHJlcXVlc3RzIHRvIHRoZSBiYWNrZW5kXHJcbiAgICAgICAgJy9hcGknOiB7XHJcbiAgICAgICAgICB0YXJnZXQ6IGVudi5WSVRFX0JBQ0tFTkRfVVJMIHx8ICdodHRwOi8vbG9jYWxob3N0OjgwMDAnLFxyXG4gICAgICAgICAgY2hhbmdlT3JpZ2luOiB0cnVlLFxyXG4gICAgICAgICAgc2VjdXJlOiBmYWxzZSxcclxuICAgICAgICAgIHJld3JpdGU6IChwYXRoKSA9PiBwYXRoLnJlcGxhY2UoL15cXC9hcGkvLCAnJyksXHJcbiAgICAgICAgICBjb25maWd1cmU6IChwcm94eSwgX29wdGlvbnMpID0+IHtcclxuICAgICAgICAgICAgcHJveHkub24oJ2Vycm9yJywgKGVyciwgcmVxLCByZXMpID0+IHtcclxuICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCdQcm94eSBFcnJvcjonLCBlcnIpO1xyXG4gICAgICAgICAgICAgIGlmICghcmVzLmhlYWRlcnNTZW50KSB7XHJcbiAgICAgICAgICAgICAgICByZXMud3JpdGVIZWFkKDUwMCwgeyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH0pO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICByZXMuZW5kKEpTT04uc3RyaW5naWZ5KHsgZXJyb3I6ICdQcm94eSBFcnJvcicsIGRldGFpbHM6IGVyci5tZXNzYWdlIH0pKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBwcm94eS5vbigncHJveHlSZXEnLCAocHJveHlSZXEsIHJlcSwgcmVzKSA9PiB7XHJcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coYFske25ldyBEYXRlKCkudG9JU09TdHJpbmcoKX1dICR7cmVxLm1ldGhvZH0gJHtyZXEudXJsfSAtPiAke3Byb3h5UmVxLnBhdGh9YCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgcHJveHkub24oJ3Byb3h5UmVzJywgKHByb3h5UmVzLCByZXEsIHJlcykgPT4ge1xyXG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKGBbJHtuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCl9XSAke3Byb3h5UmVzLnN0YXR1c0NvZGV9ICR7cmVxLm1ldGhvZH0gJHtyZXEudXJsfWApO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfSxcclxuICAgICAgICAvLyBQcm94eSBXZWJTb2NrZXQgY29ubmVjdGlvbnNcclxuICAgICAgICAnL3dzJzoge1xyXG4gICAgICAgICAgdGFyZ2V0OiBlbnYuVklURV9XRUJTT0NLRVRfVVJMIHx8ICd3czovL2xvY2FsaG9zdDo4MDAwJyxcclxuICAgICAgICAgIHdzOiB0cnVlLFxyXG4gICAgICAgICAgY2hhbmdlT3JpZ2luOiB0cnVlLFxyXG4gICAgICAgICAgc2VjdXJlOiBmYWxzZSxcclxuICAgICAgICAgIHJld3JpdGU6IChwYXRoKSA9PiBwYXRoXHJcbiAgICAgICAgfVxyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIGRlZmluZToge1xyXG4gICAgICAncHJvY2Vzcy5lbnYnOiBlbnYsXHJcbiAgICB9LFxyXG4gIH07XHJcbn0pO1xyXG4iXSwKICAibWFwcGluZ3MiOiAiO0FBQWdSLFNBQVMsY0FBYyxlQUFlO0FBQ3RULE9BQU8sV0FBVztBQUVsQixJQUFPLHNCQUFRLGFBQWEsQ0FBQyxFQUFFLEtBQUssTUFBTTtBQUV4QyxRQUFNLE1BQU0sUUFBUSxNQUFNLFFBQVEsSUFBSSxHQUFHLEVBQUU7QUFHM0MsVUFBUSxJQUFJLCtCQUErQjtBQUFBLElBQ3pDLGNBQWMsSUFBSTtBQUFBLElBQ2xCLG9CQUFvQixJQUFJO0FBQUEsSUFDeEIsa0JBQWtCLElBQUk7QUFBQSxFQUN4QixDQUFDO0FBRUQsU0FBTztBQUFBLElBQ0wsU0FBUyxDQUFDLE1BQU0sQ0FBQztBQUFBLElBQ2pCLFFBQVE7QUFBQSxNQUNOLE1BQU07QUFBQSxNQUNOLE1BQU07QUFBQSxNQUNOLE1BQU07QUFBQSxNQUNOLE9BQU87QUFBQTtBQUFBLFFBRUwsUUFBUTtBQUFBLFVBQ04sUUFBUSxJQUFJLG9CQUFvQjtBQUFBLFVBQ2hDLGNBQWM7QUFBQSxVQUNkLFFBQVE7QUFBQSxVQUNSLFNBQVMsQ0FBQyxTQUFTLEtBQUssUUFBUSxVQUFVLEVBQUU7QUFBQSxVQUM1QyxXQUFXLENBQUMsT0FBTyxhQUFhO0FBQzlCLGtCQUFNLEdBQUcsU0FBUyxDQUFDLEtBQUssS0FBSyxRQUFRO0FBQ25DLHNCQUFRLE1BQU0sZ0JBQWdCLEdBQUc7QUFDakMsa0JBQUksQ0FBQyxJQUFJLGFBQWE7QUFDcEIsb0JBQUksVUFBVSxLQUFLLEVBQUUsZ0JBQWdCLG1CQUFtQixDQUFDO0FBQUEsY0FDM0Q7QUFDQSxrQkFBSSxJQUFJLEtBQUssVUFBVSxFQUFFLE9BQU8sZUFBZSxTQUFTLElBQUksUUFBUSxDQUFDLENBQUM7QUFBQSxZQUN4RSxDQUFDO0FBRUQsa0JBQU0sR0FBRyxZQUFZLENBQUMsVUFBVSxLQUFLLFFBQVE7QUFDM0Msc0JBQVEsSUFBSSxLQUFJLG9CQUFJLEtBQUssR0FBRSxZQUFZLENBQUMsS0FBSyxJQUFJLE1BQU0sSUFBSSxJQUFJLEdBQUcsT0FBTyxTQUFTLElBQUksRUFBRTtBQUFBLFlBQzFGLENBQUM7QUFFRCxrQkFBTSxHQUFHLFlBQVksQ0FBQyxVQUFVLEtBQUssUUFBUTtBQUMzQyxzQkFBUSxJQUFJLEtBQUksb0JBQUksS0FBSyxHQUFFLFlBQVksQ0FBQyxLQUFLLFNBQVMsVUFBVSxJQUFJLElBQUksTUFBTSxJQUFJLElBQUksR0FBRyxFQUFFO0FBQUEsWUFDN0YsQ0FBQztBQUFBLFVBQ0g7QUFBQSxRQUNGO0FBQUE7QUFBQSxRQUVBLE9BQU87QUFBQSxVQUNMLFFBQVEsSUFBSSxzQkFBc0I7QUFBQSxVQUNsQyxJQUFJO0FBQUEsVUFDSixjQUFjO0FBQUEsVUFDZCxRQUFRO0FBQUEsVUFDUixTQUFTLENBQUMsU0FBUztBQUFBLFFBQ3JCO0FBQUEsTUFDRjtBQUFBLElBQ0Y7QUFBQSxJQUNBLFFBQVE7QUFBQSxNQUNOLGVBQWU7QUFBQSxJQUNqQjtBQUFBLEVBQ0Y7QUFDRixDQUFDOyIsCiAgIm5hbWVzIjogW10KfQo=
